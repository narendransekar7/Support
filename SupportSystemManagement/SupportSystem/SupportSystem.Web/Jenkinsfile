pipeline {
    agent { label 'Jenkins-Agent' }

    environment {
        // Define environment variables for Docker Hub credentials
        DOCKER_CREDENTIALS_ID = 'dockerhub' // Jenkins credentials ID
        DOCKER_IMAGE_NAME = 'narendransekar/supportjenkins'
        DOCKER_TAG = 'latest' // or any specific tag
    }

    stages {
        stage('Clone Repository') {
            steps {
                // Clone your .NET Core project repository
                git 'https://github.com/narendransekar7/Support.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    // Build the Docker image
                    sh 'docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} -f SupportSystemManagement/SupportSystem/Dockerfile .'
                }
            }
        }

        stage('Run Docker Container on Port 5000') {
            steps {
                script {
                    // Run the Docker container and expose port 5000
                    sh 'docker run -d -p 5000:80 --name my_app ${DOCKER_IMAGE_NAME}:${DOCKER_TAG}'
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                script {
                    // Login to Docker Hub
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh 'echo $DOCKER_PASSWORD | docker login -u $DOCKER_USERNAME --password-stdin'
                    }

                    // Push the Docker image to Docker Hub
                    sh 'docker push ${DOCKER_IMAGE_NAME}:${DOCKER_TAG}'
                }
            }
        }
    }


}
